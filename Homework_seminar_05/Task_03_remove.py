#3. Вот вам текст:
#«Ну, вышел я, короче, из подъезда. В общем, короче говоря, шел я, 
# кажется, в магазин. Ну,эээ, в общем, было лето, кажется. Как бы тепло. 
# Солнечно, короче. Иду я, иду, в общем, по улице, а тут, короче, яма. Я, эээээ…. 
# Упал в нее. И снова вышел, короче, из подъезда. 
# Ясен пень, в магазин. В общем, лето на дворе, жарко, солнечно, птицы, короче, летают. 
# Кстати, иду я по улице, иду, а тут, короче, яма. Ну, я в нее упал, в общем. 
# Вышел из подъезда, короче. Лето на дворе, ясен пень. Птицы поют, короче, солнечно. 
# В общем, в магазин мне надо. Что-то явно не так, короче. «Рекурсия», - подумал я. 
# Ээээ...короче, в общем, пошел другой дорогой и не упал в эту… ээээ… яму. Хлеба купил».
# Отфильтруйте его, чтобы этот текст можно было нормально прочесть. 
# Предусмотрите вариант, что мусорные слова могли быть написаны без использования запятых.

exe_text = ("Ну, вышел я, короче, из подъезда. В общем, короче говоря, шел я, кажется, в магазин. "
    "Ну,эээ, в общем, было лето, кажется. Как бы тепло. Солнечно, короче. "
    "Иду я, иду, в общем, по улице, а тут, короче, яма. Я, эээээ…. Упал в нее. "
    "И снова вышел, короче, из подъезда. Ясен пень, в магазин. "
    "В общем, лето на дворе, жарко, солнечно, птицы, короче, летают. "
    "Кстати, иду я по улице, иду, а тут, короче, яма. Ну, я в нее упал, в общем. "
    "Вышел из подъезда, короче. Лето на дворе, ясен пень. Птицы поют, короче, солнечно. "
    "В общем, в магазин мне надо. Что-то явно не так, короче. «Рекурсия», - подумал я. "
    "Ээээ...короче, в общем, пошел другой дорогой и не упал в эту… ээээ… яму. Хлеба купил")

trash_list = ["ну", "короче", "говоря", "эээээ", "кажется", "ээээ", "ясен пень", "эээ", "…", "в общем", "как бы", "..."]

in_point = lambda exe_txt, sub_txt: exe_txt.lower().find(sub_txt.lower())
remove_text = lambda in_txt, a, b : in_txt[:a] + (in_txt[(a + b):])

def remove_trash (full_text, sub_text):
    len_remove = len(sub_text)

    while in_point(full_text, sub_text) != -1:
        full_text = remove_text (full_text, in_point(full_text, sub_text), len_remove )  
    return full_text  
      

for word in trash_list: # убираем все лишнее

    exe_text = remove_trash (exe_text, f", {word},")
    exe_text = remove_trash (exe_text, f", {word}")
    exe_text = remove_trash (exe_text, f"{word},")
    exe_text = remove_trash (exe_text, f"{word}")

# уберем лишние пробелы и сделаем заглавными первые буквы предложения

temp_list = exe_text.split(".")


for i in range(0, len(temp_list)):
    temp_list[i] = temp_list[i].lstrip().capitalize()

exe_text = ""
exe_text = ". ".join(temp_list)

print(exe_text)